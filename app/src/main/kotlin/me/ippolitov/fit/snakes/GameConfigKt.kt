//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: snakes.proto

package me.ippolitov.fit.snakes;

@kotlin.jvm.JvmName("-initializegameConfig")
public inline fun gameConfig(block: me.ippolitov.fit.snakes.GameConfigKt.Dsl.() -> kotlin.Unit): me.ippolitov.fit.snakes.SnakesProto.GameConfig =
  me.ippolitov.fit.snakes.GameConfigKt.Dsl._create(me.ippolitov.fit.snakes.SnakesProto.GameConfig.newBuilder()).apply { block() }._build()
public object GameConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: me.ippolitov.fit.snakes.SnakesProto.GameConfig.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: me.ippolitov.fit.snakes.SnakesProto.GameConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): me.ippolitov.fit.snakes.SnakesProto.GameConfig = _builder.build()

    /**
     * <pre>
     * Ширина поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 width = 1 [default = 40];</code>
     */
    public var width: kotlin.Int
      @JvmName("getWidth")
      get() = _builder.getWidth()
      @JvmName("setWidth")
      set(value) {
        _builder.setWidth(value)
      }
    /**
     * <pre>
     * Ширина поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 width = 1 [default = 40];</code>
     */
    public fun clearWidth() {
      _builder.clearWidth()
    }
    /**
     * <pre>
     * Ширина поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 width = 1 [default = 40];</code>
     * @return Whether the width field is set.
     */
    public fun hasWidth(): kotlin.Boolean {
      return _builder.hasWidth()
    }

    /**
     * <pre>
     * Высота поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 height = 2 [default = 30];</code>
     */
    public var height: kotlin.Int
      @JvmName("getHeight")
      get() = _builder.getHeight()
      @JvmName("setHeight")
      set(value) {
        _builder.setHeight(value)
      }
    /**
     * <pre>
     * Высота поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 height = 2 [default = 30];</code>
     */
    public fun clearHeight() {
      _builder.clearHeight()
    }
    /**
     * <pre>
     * Высота поля в клетках (от 10 до 100)
     * </pre>
     *
     * <code>optional int32 height = 2 [default = 30];</code>
     * @return Whether the height field is set.
     */
    public fun hasHeight(): kotlin.Boolean {
      return _builder.hasHeight()
    }

    /**
     * <pre>
     * Количество клеток с едой, независимо от числа игроков (от 0 до 100)
     * </pre>
     *
     * <code>optional int32 food_static = 3 [default = 1];</code>
     */
    public var foodStatic: kotlin.Int
      @JvmName("getFoodStatic")
      get() = _builder.getFoodStatic()
      @JvmName("setFoodStatic")
      set(value) {
        _builder.setFoodStatic(value)
      }
    /**
     * <pre>
     * Количество клеток с едой, независимо от числа игроков (от 0 до 100)
     * </pre>
     *
     * <code>optional int32 food_static = 3 [default = 1];</code>
     */
    public fun clearFoodStatic() {
      _builder.clearFoodStatic()
    }
    /**
     * <pre>
     * Количество клеток с едой, независимо от числа игроков (от 0 до 100)
     * </pre>
     *
     * <code>optional int32 food_static = 3 [default = 1];</code>
     * @return Whether the foodStatic field is set.
     */
    public fun hasFoodStatic(): kotlin.Boolean {
      return _builder.hasFoodStatic()
    }

    /**
     * <pre>
     * Задержка между ходами (сменой состояний) в игре, в миллисекундах (от 100 до 3000)
     * </pre>
     *
     * <code>optional int32 state_delay_ms = 5 [default = 1000];</code>
     */
    public var stateDelayMs: kotlin.Int
      @JvmName("getStateDelayMs")
      get() = _builder.getStateDelayMs()
      @JvmName("setStateDelayMs")
      set(value) {
        _builder.setStateDelayMs(value)
      }
    /**
     * <pre>
     * Задержка между ходами (сменой состояний) в игре, в миллисекундах (от 100 до 3000)
     * </pre>
     *
     * <code>optional int32 state_delay_ms = 5 [default = 1000];</code>
     */
    public fun clearStateDelayMs() {
      _builder.clearStateDelayMs()
    }
    /**
     * <pre>
     * Задержка между ходами (сменой состояний) в игре, в миллисекундах (от 100 до 3000)
     * </pre>
     *
     * <code>optional int32 state_delay_ms = 5 [default = 1000];</code>
     * @return Whether the stateDelayMs field is set.
     */
    public fun hasStateDelayMs(): kotlin.Boolean {
      return _builder.hasStateDelayMs()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun me.ippolitov.fit.snakes.SnakesProto.GameConfig.copy(block: me.ippolitov.fit.snakes.GameConfigKt.Dsl.() -> kotlin.Unit): me.ippolitov.fit.snakes.SnakesProto.GameConfig =
  me.ippolitov.fit.snakes.GameConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

